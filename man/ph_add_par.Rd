% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ppt_ph_manipulate.R
\name{ph_add_par}
\alias{ph_add_par}
\title{append paragraph}
\usage{
ph_add_par(x, type = "body", id = 1, id_chr = NULL, level = 1, ph_label = NULL)
}
\arguments{
\item{x}{an rpptx object}

\item{type}{placeholder type}

\item{id}{placeholder index (integer) for a duplicated type. This is to be used when a placeholder
type is not unique in the layout of the current slide, e.g. two placeholders with type 'body'. To
add onto the first, use \code{id = 1} and \code{id = 2} for the second one.
Values can be read from \code{\link{slide_summary}}.}

\item{id_chr}{deprecated.}

\item{level}{paragraph level}

\item{ph_label}{label associated to the placeholder. Use column
\code{ph_label} of result returned by \code{\link{slide_summary}}.}
}
\description{
append a new empty paragraph in a placeholder.
The function let you add a new empty paragraph to an existing
content in an exiisting shape, existing paragraphs will be preserved.
}
\note{
This function will be deprecated in a next release because it is not
efficient and make users write complex code. Use instead \code{\link[=fpar]{fpar()}} to build
formatted paragraphs.
}
\section{Usage}{

If your goal is to add formatted text in a new shape, use \code{\link{ph_with}}
with a \code{\link{block_list}} instead of this function.
}

\examples{
fileout <- tempfile(fileext = ".pptx")
default_text <- fp_text(font.size = 0, bold = TRUE, color = "red")

doc <- read_pptx()
doc <- add_slide(doc, layout = "Title and Content", master = "Office Theme")
doc <- ph_with(doc, "A text", location = ph_location_type(type = "body"))
doc <- ph_add_par(doc, level = 2)
doc <- ph_add_text(doc, str = "and another, ", style = default_text )
doc <- ph_add_par(doc, level = 3)
doc <- ph_add_text(doc, str = "and another!",
              style = update(default_text, color = "blue"))

print(doc, target = fileout)
}
